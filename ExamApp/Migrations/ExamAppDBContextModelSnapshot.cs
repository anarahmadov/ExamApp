// <auto-generated />
using System;
using ExamApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamApp.Migrations
{
    [DbContext(typeof(ExamAppDBContext))]
    partial class ExamAppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamApp.Models.Entities.Exam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EXAM_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("DATE")
                        .HasColumnName("EXAM_DATE");

                    b.Property<short>("Grade")
                        .HasColumnType("smallint")
                        .HasColumnName("GRADE");

                    b.Property<string>("LessonCode")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .HasColumnName("LESSON_CODE");

                    b.Property<short>("StudentNumber")
                        .HasColumnType("smallint")
                        .HasColumnName("STUDENT_NUMBER");

                    b.HasKey("ID");

                    b.HasIndex("LessonCode");

                    b.HasIndex("StudentNumber");

                    b.ToTable("EXAMS", "TBL");
                });

            modelBuilder.Entity("ExamApp.Models.Entities.Lesson", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LESSON_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<short>("ClassNumber")
                        .HasColumnType("smallint")
                        .HasColumnName("CLASS_NUMBER");

                    b.Property<string>("LessonCode")
                        .IsRequired()
                        .HasColumnType("char(3)")
                        .HasColumnName("LESSON_CODE");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("LESSON_NAME");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TEACHER_NAME");

                    b.Property<string>("TeacherSurname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TEACHER_SURNAME");

                    b.HasKey("ID");

                    b.ToTable("LESSONS", "TBL");
                });

            modelBuilder.Entity("ExamApp.Models.Entities.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("STUDENT_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<short>("ClassNumber")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("CLASS_NUMBER");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("STUDENT_NAME");

                    b.Property<short>("StudentNumber")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("STUDENT_NUMBER");

                    b.Property<string>("StudentSurname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("STUDENT_SURNAME");

                    b.HasKey("ID");

                    b.ToTable("STUDENTS", "TBL");
                });

            modelBuilder.Entity("ExamApp.Models.Entities.Exam", b =>
                {
                    b.HasOne("ExamApp.Models.Entities.Lesson", "Lesson")
                        .WithMany("Exams")
                        .HasForeignKey("LessonCode")
                        .HasPrincipalKey("LessonCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamApp.Models.Entities.Student", "Student")
                        .WithMany("Exams")
                        .HasForeignKey("StudentNumber")
                        .HasPrincipalKey("StudentNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExamApp.Models.Entities.Lesson", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("ExamApp.Models.Entities.Student", b =>
                {
                    b.Navigation("Exams");
                });
#pragma warning restore 612, 618
        }
    }
}
